{"version":3,"file":"proc.js","sourceRoot":"","sources":["../../src/proc.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAOH;;GAEG;AACU,QAAA,IAAI,GACf,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAA;AAC9D;;GAEG;AACU,KAAmB,YAAI;IAClC,CAAC,CAAC,CAAC,GAAG,EAAE;QACN,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBACtC,MAAM,GAAG,GAAG,YAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;oBAC3E,MAAM;gBACR,CAAC;gBACD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,WAAW,EAAE,CAAC;oBACxC,EAAE,CAAC,CAAC;oBACJ,SAAS;gBACX,CAAC;YACH,CAAC;YACD,OAAO,CAAC,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,YAAI,CAAC,KAAK,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,CAAC;QACD,OAAO,CAAC,YAAI,CAAC,QAAQ,EAAE,YAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAlBE,gBAAQ,UAAE,YAAI,SAkBhB;AAEZ;;;GAGG;AACU,QAAA,GAAG,GAAG,YAAI,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,CAAA;AACvC;;GAEG;AACU,QAAA,GAAG,GAAG,YAAI,EAAE,GAAG,IAAI,EAAE,CAAA","sourcesContent":["/**\r\n * grab some basic process stuff safely at startup\r\n *\r\n * @module\r\n */\r\n\r\ndeclare var process: NodeJS.Process & {\r\n  _exiting: boolean\r\n  reallyExit(exitCode: string | number): never\r\n}\r\n\r\n/**\r\n * A reference to the global `process` object, if available\r\n */\r\nexport const proc =\r\n  typeof process === 'object' && process ? process : undefined\r\n/**\r\n * A reference to `process.argv`, if available\r\n */\r\nexport const [execArgv, argv] = proc\r\n  ? (() => {\r\n    if (process.versions.electron) {\r\n      let i = 1;\r\n      for (i = 1; i < proc.argv.length; ++i) {\r\n        const arg = proc.argv[i];\r\n        if (!arg || !(arg.startsWith('--') || arg.startsWith('-')) || arg === '--') {\r\n          break;\r\n        }\r\n        if (arg === '-r' || arg === '--require') {\r\n          ++i;\r\n          continue;\r\n        }\r\n      }\r\n      return [proc.argv.slice(1, i), [proc.argv0, ...proc.argv.slice(i)]];\r\n    }\r\n    return [proc.execArgv, proc.argv];\r\n  })()\r\n  : [[], []]\r\n\r\n/**\r\n * A reference to `process.cwd()`, if available. Note that this is not\r\n * updated if `process.chdir()` is called.\r\n */\r\nexport const cwd = proc?.cwd?.() || '.'\r\n/**\r\n * A reference to `process.env`, if available.\r\n */\r\nexport const env = proc?.env || {}\r\n"]}