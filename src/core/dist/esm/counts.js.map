{"version":3,"file":"counts.js","sourceRoot":"","sources":["../../src/counts.ts"],"names":[],"mappings":"AAYA;;;;;;;GAOG;AACH,MAAM,OAAO,MAAM;IACjB,KAAK,GAAW,CAAC,CAAA;IACjB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,QAAQ,GAAW,CAAC,CAAA;IACpB,YAAY,CAAuB;QACjC,IAAI,CAAC;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC/B,CAAC;IACD,MAAM;QACJ,MAAM,CAAC,GAAe;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAA;QACD,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,QAAQ;YAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7C,OAAO,CAAC,CAAA;IACV,CAAC;CACF","sourcesContent":["/**\r\n * JSON object representation of {@link @tapjs/core!counts.Counts}\r\n */\r\nexport interface CountsJSON {\r\n  total: number\r\n  pass: number\r\n  fail?: number\r\n  skip?: number\r\n  todo?: number\r\n  complete?: number\r\n}\r\n\r\n/**\r\n * Class representing a count of all the assertions in a test\r\n *\r\n * The {@link @tapjs/core!counts.Counts#complete} field is only used when counting tests and\r\n * tracking their completion status.\r\n *\r\n * @internal\r\n */\r\nexport class Counts {\r\n  total: number = 0\r\n  pass: number = 0\r\n  fail: number = 0\r\n  skip: number = 0\r\n  todo: number = 0\r\n  complete: number = 0\r\n  constructor(c?: Counts | CountsJSON) {\r\n    if (c) Object.assign(this, c)\r\n  }\r\n  toJSON(): CountsJSON {\r\n    const c: CountsJSON = {\r\n      total: this.total,\r\n      pass: this.pass,\r\n    }\r\n    if (this.fail) c.fail = this.fail\r\n    if (this.todo) c.todo = this.todo\r\n    if (this.skip) c.skip = this.skip\r\n    if (this.complete) c.complete = this.complete\r\n    return c\r\n  }\r\n}\r\n"]}