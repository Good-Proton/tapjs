{"version":3,"file":"throw-to-parser.js","sourceRoot":"","sources":["../../src/throw-to-parser.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAA;AAGlC;;;;;GAKG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,MAAc,EACd,KAAgC,EAChC,EAAE;IACF,oEAAoE;IACpE,IAAI,CAAC,KAAK;QAAE,OAAM;IAClB,MAAM,CAAC,KAAK,CACV,UAAU,MAAM,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,MAClC,KAAK,CAAC,OAAO,IAAI,iBACnB,KAAK,KAAK,CAAC,KAAK,CAAC,EAAE,CACpB,CAAA;IACD,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,QAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAA;IAClD,CAAC;IACD,MAAM,CAAC,GAAG,EAAE,CAAA;IACZ,OAAO,KAAK,CAAA;AACd,CAAC,CAAA","sourcesContent":["import { Parser } from 'tap-parser'\r\nimport { diags } from './diags.js'\r\nimport { Extra } from './index.js'\r\n\r\n/**\r\n * Provides a way for Spawn and Worker instances to handle thrown\r\n * errors in their TAP subtest block, rather than always having to\r\n * proxy their throws to the parent, since they lack any TAP generation\r\n * methods like TestBase.\r\n */\r\nexport const throwToParser = (\r\n  parser: Parser,\r\n  extra?: Extra | undefined | void,\r\n) => {\r\n  // if the throw was already proxied up for some reason, just give up\r\n  if (!extra) return\r\n  parser.write(\r\n    `not ok ${parser.pointsSeen.size + 1} - ${\r\n      extra.message || 'unhandled error'\r\n    }\\n${diags(extra)}`,\r\n  )\r\n  if (parser.planEnd === -1) {\r\n    parser.write(`\\n1..${parser.pointsSeen.size}\\n`)\r\n  }\r\n  parser.end()\r\n  return extra\r\n}\r\n"]}